<?xml version="1.0" encoding="UTF-8"?>

<!--
Ant build script for Groovy.

Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in
compliance with the License. You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under the License is
distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
implied. See the License for the specific language governing permissions and limitations under the License.

This work is copyright by the author(s) and is part of a greater work collectively copyright by Codehaus on
behalf of the Groovy community. See the NOTICE.txt file distributed with this work for additional information.

-->

<project name="Griffon" default="jar" basedir=".">

    <property file="local.build.properties"/>
    <property file="build.properties"/>
    <property environment="env"/>
    <property name="groovy.home" value="${env.GROOVY_HOME}"/>
    <property name="java.home" value="${env.JAVA_HOME}"/>


    <path id="lib.groovy">
        <fileset dir="${groovy.home}/lib">
            <include name="**/*.jar"/>
        </fileset>
    </path>
    <path id="build.classpath">
        <fileset dir="${griffon.lib}">
            <include name="**/*.jar"/>
        </fileset>
        <fileset dir="${java.home}">
            <include name="lib/tools.jar"/>
        </fileset>
        <path refid="lib.groovy"/>
        <dirset dir="${griffon.build.classes}"/>
    </path>
    <path id="test.classpath">
        <path refid="build.classpath"/>
        <dirset dir="${griffon.build.classes}"/>
        <dirset dir="${griffon.build.tests}"/>
    </path>

    <taskdef name="groovyc" classname="org.codehaus.groovy.ant.Groovyc" classpathref="lib.groovy"/>

    <target name="clean" description="Clean the build directory.">
        <delete dir="${griffon.dist}"/>
        <delete dir="${griffon.build}"/>
    </target>

    <target name="-initialize">
        <mkdir dir="${griffon.build.classes}"/>
        <mkdir dir="${griffon.build.reports}"/>
        <mkdir dir="${griffon.build.tests}"/>
        <mkdir dir="${griffon.dist}"/>
    </target>

    <target name="compile" depends="-initialize" description="Compile all classes.">
        <javac srcdir="${griffon.src.main}"  destDir="${griffon.build.classes}" classpathref="build.classpath" debug="true"/>
        <groovyc srcdir="${griffon.src.main}" destDir="${griffon.build.classes}">
            <classpath refid="build.classpath"/>
            <!--javac source="1.5" target="1.5" fork="true" memorymaximumsize="64m"/-->
        </groovyc>
        <copy toDir="${griffon.build.classes}">
            <fileset dir="${griffon.src.test}">
                <exclude name="**/*.java"/>
                <exclude name="**/*.groovy"/>
                <exclude name="**/*.html"/>
            </fileset>
        </copy>
    </target>

    <target name="compile-tests" depends="compile" description="Compile all tests.">
        <javac srcdir="${griffon.src.test}"  destDir="${griffon.build.tests}" classpathref="test.classpath" debug="true"/>
        <groovyc srcdir="${griffon.src.test}" destDir="${griffon.build.tests}">
            <classpath refid="test.classpath"/>
            <!--javac source="1.5" target="1.5" fork="true" memorymaximumsize="64m"/-->
        </groovyc>
        <copy toDir="${griffon.build.tests}">
            <fileset dir="${griffon.src.test}">
                <exclude name="**/*.java"/>
                <exclude name="**/*.groovy"/>
                <exclude name="**/*.html"/>
            </fileset>
        </copy>
    </target>

    <target name="test"
            depends="compile-tests,-testOne,-testAll"
            description="Compile and test all the classes (or just one class if testCase property is defined)."/>

    <target name="clean-test" depends="clean,test"
            description="Clean and compile and test all the classes (or just one class if testCase property is defined)."/>

    <condition property="_skipTests_">
        <or>
            <equals arg1="${test}" arg2="false"/>
            <istrue value="${skipTests}"/>
        </or>
    </condition>

    <condition property="_testOne_">
        <and>
            <not>
                <istrue value="${_skipTests_}"/>
            </not>
            <isset property="testCase"/>
        </and>
    </condition>

    <target name="-testOne" if="_testOne_">
        <junit printsummary="true" fork="true" includeantruntime="false" haltonfailure="yes"
               dir="${basedir}">
            <formatter type='plain'/>
            <formatter type='xml'/>

            <test name="${testCase}" todir="${griffon.build.reports}"/>
            <classpath>
                <pathelement location="${griffon.build.tests}"/>
                <pathelement location="${griffon.build.classes}"/>
                <path refid="build.classpath"/>
            </classpath>
        </junit>

        <fail if="junit.failed"/>
    </target>

    <condition property="_testAll_">
        <and>
            <not>
                <istrue value="${_skipTests_}"/>
            </not>
            <not>
                <isset property="_testOne_"/>
            </not>
        </and>
    </condition>

    <target name="-testAll" depends="compile-tests,jar" description="Run all the tests in the build." if="_testAll_">
        <junit printsummary='yes' failureproperty='junit.failed'>
            <formatter type='plain'/>
            <formatter type='xml'/>

            <batchtest fork='yes' todir="${griffon.build.reports}">
                <fileset dir="${griffon.build.tests}" includes='**/*Test.class'/>
            </batchtest>
            <classpath>
                <pathelement location="${griffon.build.tests}"/>
                <pathelement location="${griffon.build.classes}"/>
                <path refid="build.classpath"/>
            </classpath>
        </junit>

        <fail if="junit.failed"/>
    </target>

    <target name="jar" depends="compile" description="Create a distribution of the project">
        <jar destfile="${griffon.dist}/${griffon.jar.dist}" basedir="${griffon.build.classes}"
             excludes='*Test.*'>
            <manifest>
                <attribute name="Built-By" value="${user.name}"/>
                <attribute name="Extension-Name" value="griffon"/>
                <attribute name='Specification-Title' value='SwingX Builder: building UIs with Groovy'/>
                <attribute name='Specification-Vendor' value='The Codehaus'/>
            </manifest>
            <zipfileset fullpath="META-INF/LICENSE.txt" file="LICENSE.txt"/>
        </jar>
    </target>

    <target name='dist' depends="jar" description='Create a zip file containing a full distribution of the project'>
        <zip destfile="${griffon.zip.dist}">
            <zipfileset prefix="src/" dir="${griffon.src.main}"/>
            <zipfileset dir="${griffon.dist}" excludes='*.zip'/>
            <zipfileset dir="${griffon.dist}" excludes='*.zip'/>
            <!--zipfileset prefix="docs/" dir="${griffon.docs}" includes='*.*'/-->
        </zip>
    </target>
</project>
